from aiogram.types import CallbackQuery

import constants
from keyboards.inline.callback_data import meeting_feedback
from loader import dp
from request_to_server.requests import leave_feedback


@dp.callback_query_handler(meeting_feedback.filter(status="1"))
async def reg_bot(callback: CallbackQuery):
    await callback.answer(cache_time=10)

    response = leave_feedback(callback.from_user.id, constants.a, 'üëé')
    if response.status_code == 200:
        await callback.answer('–¢–≤–æ–π –æ—Ç–∑—ã–≤ –æ –≤—Å—Ç—Ä–µ—á–µ –æ—Å—Ç–∞–≤–ª–µ–Ω')
    else:
        await callback.answer('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∂–∏ –µ—Å—Ç—å')

@dp.callback_query_handler(meeting_feedback.filter(status="2"))
async def reg_bot(callback: CallbackQuery):
    await callback.answer(cache_time=10)

    response = leave_feedback(callback.from_user.id, constants.a, 'üòí')
    if response.status_code == 200:
        await callback.answer('–¢–≤–æ–π –æ—Ç–∑—ã–≤ –æ –≤—Å—Ç—Ä–µ—á–µ –æ—Å—Ç–∞–≤–ª–µ–Ω')
    else:
        await callback.answer('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∂–∏ –µ—Å—Ç—å')

@dp.callback_query_handler(meeting_feedback.filter(status="3"))
async def reg_bot(callback: CallbackQuery):
    await callback.answer(cache_time=10)

    response = leave_feedback(callback.from_user.id, constants.a, 'üôÇ')
    if response.status_code == 200:
        await callback.answer('–¢–≤–æ–π –æ—Ç–∑—ã–≤ –æ –≤—Å—Ç—Ä–µ—á–µ –æ—Å—Ç–∞–≤–ª–µ–Ω')
    else:
        await callback.answer('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∂–∏ –µ—Å—Ç—å')

@dp.callback_query_handler(meeting_feedback.filter(status="4"))
async def reg_bot(callback: CallbackQuery):
    await callback.answer(cache_time=10)

    response = leave_feedback(callback.from_user.id, constants.a, 'üòç')
    if response.status_code == 200:
        await callback.answer('–¢–≤–æ–π –æ—Ç–∑—ã–≤ –æ –≤—Å—Ç—Ä–µ—á–µ –æ—Å—Ç–∞–≤–ª–µ–Ω')
    else:
        await callback.answer('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∂–∏ –µ—Å—Ç—å')

@dp.callback_query_handler(meeting_feedback.filter(status="5"))
async def reg_bot(callback: CallbackQuery):
    await callback.answer(cache_time=10)

    response = leave_feedback(callback.from_user.id, constants.a, 'üëç')
    if response.status_code == 200:
        await callback.answer('–¢–≤–æ–π –æ—Ç–∑—ã–≤ –æ –≤—Å—Ç—Ä–µ—á–µ –æ—Å—Ç–∞–≤–ª–µ–Ω')
    else:
        await callback.answer('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∂–∏ –µ—Å—Ç—å')
